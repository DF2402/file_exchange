version: '3.8'

services:
  # MongoDB 服務
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123456
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Node.js 應用服務
  app:
    build: .
    container_name: file-website
    restart: unless-stopped
    ports:
      - "3500:3500"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/fileWebsite
      - JWT_SECRET=your_jwt_secret
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:admin123456@mongodb:27017/admin?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - PORT=3500
      - JWT_EXPIRES_IN=24h
      - FILE_UPLOAD_MAX_SIZE=100mb
      - HOST_IP=${HOST_IP:-192.168.1.132}
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3500/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16